/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package yodcclient;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import static java.lang.Thread.sleep;
import java.net.DatagramSocket;
import java.net.Socket;
import java.net.SocketException;
import javax.swing.JOptionPane;
import peerManage.CommonWindow;

/**
 *
 * @author nikhil
 */
public class StartingWindow extends javax.swing.JFrame {

    /**
     * Creates new form StartingWindow
     */
    public StartingWindow() {
        initComponents();
    }
    public static int counterPort=10000;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        IPTF = new javax.swing.JTextField();
        ipLabel = new javax.swing.JLabel();
        nickTF = new javax.swing.JTextField();
        nickLabel = new javax.swing.JLabel();
        connect = new javax.swing.JButton();
        logoLabel = new javax.swing.JLabel();
        yoDcLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Welcome to YoDC!");

        IPTF.setText("172.31.84.171");

        ipLabel.setText("IP of Hub :");

        nickTF.setText("usual");

        nickLabel.setText("Nick Name :");

        connect.setText("Connect");
        connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectActionPerformed(evt);
            }
        });

        logoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.jpg"))); // NOI18N

        yoDcLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/text.png"))); // NOI18N
        yoDcLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nickLabel)
                            .addComponent(ipLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IPTF)
                            .addComponent(nickTF)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(242, 242, 242)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(logoLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(connect)
                                .addGap(198, 198, 198)))
                        .addGap(0, 258, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(yoDcLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(238, 238, 238))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(yoDcLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nickTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nickLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IPTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ipLabel))
                .addGap(18, 18, 18)
                .addComponent(connect)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectActionPerformed
        String nick=nickTF.getText();
        String ip=IPTF.getText();
        DatagramSocket ds;
        while(true){
            try {
                ds=new DatagramSocket(counterPort);
            } catch (SocketException ex) {
                counterPort += 20;
                continue;
            }
            break;
        }
        int inPort=counterPort;
        try{
            Socket sock = new Socket(ip,3000);
            String str=nick;
            DataOutputStream dos = new DataOutputStream(sock.getOutputStream());
            dos.writeUTF(str);
            dos.writeInt(inPort);
            DataInputStream dis=new DataInputStream(sock.getInputStream());
            String rec=dis.readUTF();
            
            if(rec.equalsIgnoreCase("fail"))
                JOptionPane.showMessageDialog(null, "User not available");
            else{
                
                CommonWindow cw = new CommonWindow(nick,ip,ds,inPort);
                cw.setLocationRelativeTo(null);
                cw.setVisible(true);
                this.setVisible(false);
                new Thread(new Runnable() {
                    @Override
                    public void run() {
                        try {
                            Socket s=new Socket(ip,3600);
                        } catch (IOException ex) {
                            JOptionPane.showMessageDialog(null,ex.getMessage());
                        }
                        while(true){
                            try {
                                sleep(100);
                            } catch (InterruptedException ex) {
                                JOptionPane.showMessageDialog(null,ex.getMessage());
                            }
                        }
                    }
                }).start();
                
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        } 
        // TODO add your handling code here:
    }//GEN-LAST:event_connectActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IPTF;
    private javax.swing.JButton connect;
    private javax.swing.JLabel ipLabel;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JLabel nickLabel;
    private javax.swing.JTextField nickTF;
    private javax.swing.JLabel yoDcLabel;
    // End of variables declaration//GEN-END:variables
}
